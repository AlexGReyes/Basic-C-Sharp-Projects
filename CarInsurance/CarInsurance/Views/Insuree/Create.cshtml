@model CarInsurance.Models.Insuree

@{
  ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
    <h4>Insuree</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
      @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", @type = "email", required = "required" } })
        @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", @type = "date", @max = "2020-01-01", @min = "1900-01-01", @id = "DateOfBirth", onchange = "requestData()" } })
        @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.CarYear, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.CarYear, new { htmlAttributes = new { @class = "form-control", required = "required", @Value="1800", @Min = "1800", @id = "CarYear", onchange = "requestData()" } })
        @Html.ValidationMessageFor(model => model.CarYear, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.CarMake, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.CarMake, new { htmlAttributes = new { @class = "form-control", required = "required", @id = "CarMake", onchange = "requestData()" } })
        @Html.ValidationMessageFor(model => model.CarMake, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.CarModel, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.CarModel, new { htmlAttributes = new { @class = "form-control", required = "required", @id = "CarModel", onchange = "requestData()" } })
        @Html.ValidationMessageFor(model => model.CarModel, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.DUI, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        <div class="checkbox">
          @Html.EditorFor(model => model.DUI, new { htmlAttributes = new { @id = "DUI", onchange = "requestData()" } })
          @Html.ValidationMessageFor(model => model.DUI, "", new { @class = "text-danger" })
        </div>
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.SpeedingTickets, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.SpeedingTickets, new { htmlAttributes = new { @class = "form-control", @Value = "0", @Min = "0", @id = "SpeedingTickets", onchange = "requestData()" } })
        @Html.ValidationMessageFor(model => model.SpeedingTickets, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.CoverageType, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        <div class="checkbox">
          @Html.EditorFor(model => model.CoverageType, new { htmlAttributes = new { @id = "CoverageType", onchange = "requestData()" } })
          @Html.ValidationMessageFor(model => model.CoverageType, "", new { @class = "text-danger" })
        </div>
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Quote, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Quote, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "alex" } })
        @Html.ValidationMessageFor(model => model.Quote, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Create" class="btn btn-default" />
      </div>
    </div>
  </div>
}

<div>
  @Html.ActionLink("Back to List", "Index")
</div>






@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}




<script type="text/javascript">

  function requestData() {
    var xhttp = new XMLHttpRequest();
    var headers = "DateOfBirth=" + $('#DateOfBirth').val();
    headers += "&CarYear=" + $('#CarYear').val();
    headers += "&CarMake=" + encodeURI($('#CarMake').val().trim());
    headers += "&CarModel=" + encodeURI($('#CarModel').val().trim());
    headers += "&DUI=" + document.getElementById('DUI').checked;
    headers += "&SpeedingTickets=" + $('#SpeedingTickets').val();
    headers += "&CoverageType=" + document.getElementById('CoverageType').checked;
    xhttp.open('get', 'Create?' + headers, true);
    xhttp.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
    xhttp.onload = function () {
      // do something to response
      $('#alex').val(this.responseText)
      console.log(this.responseText);
    };
    xhttp.send();
  }

</script>